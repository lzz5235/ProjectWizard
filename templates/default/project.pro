######################################################################
# Automatically generated by qmake (2.01a) ??? ?? 16 17:01:18 2015
######################################################################

win32{
ALLONEDIR = {{ config.allone_dir }}
PLATFORM_VERSION =  {{ config.platform_version }}
}

unix {
ALLONEDIR = $$(ALLONEDIR)
}

QT += {% for model in config.qt_libs %} {{ model['qt'] }}{% endfor %}

TEMPLATE = lib
TARGET = {{ config.project_name }}
TARGET = $$qtLibraryTarget($$TARGET)
DEPENDPATH += .
INCLUDEPATH += ./include "$$ALLONEDIR/include"
DEFINES += {{ config.project_name.upper() }}_LIB
{% for lib in config.libs -%}
{%- if lib['name'] == "DDSMsgHandle" -%}
DEFINES += ZHDDS_DLL_VARIABLE
{%- endif -%}
{%- endfor %}
OBJECTS_DIR = ./tmp/obj
MOC_DIR = ./tmp/moc
DESTDIR = "$$ALLONEDIR/lib/component"
CONFIG += qt warn_on debug_and_release console

# Input
HEADERS += ./include/{{ config.project_name }}.h    \
            ./include/{{ config.project_name }}Def.h

SOURCES += ./src/{{ config.project_name }}.cpp

{% if config.component_type == "window" %}
FORMS	+= ./forms/{{ config.project_name }}.ui
RCC_DIR = ./tmp/rcc
UI_DIR = ./include
{% endif %}
{% if config.translateFile == "True" %}
TRANSLATIONS += translations/{{ config.project_name }}.ts
{% endif %}
{% if config.resourcesFile == "True" %}
RESOURCES += {{ config.project_name }}.qrc
{% endif %}

win32{
    {% for lib in config.libs %}
    {%- if lib['name'] == "DDSMsgHandle" -%}
    DEFINES += ZH_WIN32
    {%- endif -%}
    {% endfor %}
    CONFIG(release,release|debug){
	    LIBS += "$$ALLONEDIR/lib/win32/ComponentBase.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/Poco/PocoFoundation.lib"
	    {% for lib in config.libs %}
	    LIBS += "$$ALLONEDIR/lib/win32/{{ lib['prefix'] }}{{ lib['name'] }}.lib"
	    {%- if lib['name'] == "DDSMsgHandle" %}
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_kernel.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_c.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_cpp.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_express_cpp.lib"
		{% endif %}
        {% endfor %}
        {% for lib in config.thirdpart_lib %}
	    LIBS += "{{ lib.libpath}}/{{ lib.libname }}.lib"
        {% endfor %}
	}

	CONFIG(debug,release|debug) {
	    LIBS += "$$ALLONEDIR/lib/win32/ComponentBased.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/Poco/PocoFoundationd.lib"
	    {% for lib in config.libs %}
	    LIBS += "$$ALLONEDIR/lib/win32/{{ lib['prefix'] }}{{ lib['name'] }}d.lib"
	    {%- if lib['name'] == "DDSMsgHandle" %}
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_kerneld.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_cd.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_cppd.lib"
	    LIBS += "$$ALLONEDIR/lib/win32/ZHDDS.1.0/zhdds_express_cppd.lib"
		{% endif %}
        {% endfor %}
        {% for lib in config.thirdpart_lib %}
        LIBS += "{{ lib.libpath}}/{{ lib.libname }}d.lib" #Just using on Windows Platform!
        {% endfor %}
	}
}

unix {
    {% for lib in config.libs %}
    {%- if lib['name'] == "DDSMsgHandle" -%}
        DEFINES += ZH_UNIX
    {%- endif -%}
    {% endfor %}
    contains(QMAKE_HOST.arch, x86_64){
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/ -lComponentBase
        {% for lib in config.libs %}
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/{{ lib['prefix'] }} -l{{ lib['name'] }}
        {%- if lib['name'] == "DDSMsgHandle" %}
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/ZHDDS.1.0/ -lzhdds_kernel
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/ZHDDS.1.0/ -lzhdds_c
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/ZHDDS.1.0/ -lzhdds_cpp
        LIBS += -L$$ALLONEDIR/lib/linux/x86_64/ZHDDS.1.0/ -lzhdds_express_cpp
	    {% endif %}
        {% endfor %}
    }
    else{
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/ -lComponentBase
        {% for lib in config.libs %}
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/{{ lib['prefix'] }} -l{{ lib['name'] }}
        {%- if lib['name'] == "DDSMsgHandle" %}
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/ZHDDS.1.0/ -lzhdds_kernel
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/ZHDDS.1.0/ -lzhdds_c
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/ZHDDS.1.0/ -lzhdds_cpp
        LIBS += -L$$ALLONEDIR/lib/linux/x86_32/ZHDDS.1.0/ -lzhdds_express_cpp
	    {% endif %}
        {% endfor %}
    }
    {% for lib in config.thirdpart_lib %}
        LIBS += -L{{ lib.libpath}} -l{{ lib.libname }}  # 迁移到Linux下需要手动更改库路径
    {% endfor %}
}